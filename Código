.data
	f0: .asciiz "Compra negada, bit da pulseira incorreto"
	f1: .asciiz "Compra negada, valor acima do limite permitido"
	f2: .asciiz "Compra efetuada com sucesso"
	f3: .asciiz "Digite o valor a ser pago: "
	f4: .asciiz "Digite a sua senha: "
	f5: .asciiz "Digite o numero do cartão: "
	f6: .asciiz "Digite o bit da pulseira: "
	f7: .asciiz "\nO valor pago foi: "
	f8: .asciiz "\nO numero do cartão é:"
	f9: .asciiz 	"Lembre se sua senha não pode comecar com zero\n"
			          "Senha incorreta, digite novamente sua senha:"
	cartao: .space 17
	zero: .float 0.0
	mil: .float 1000
	
.text

.macro beep
	li $v0,31
	li $a0,62 #Tom
	li $a1,200 #Duração
	li $a3,100 #Volume
	syscall

	li $v0,31
	li $a0,55 #Tom
	li $a1,200 #Duração
	li $a3,100 #Volume
	syscall

	li $v0,31
	li $a0,62 #Tom
	li $a1,200 #Duração
	li $a3,100 #Volume
	syscall

	li $v0,31
	li $a0,55 #Tom
	li $a1,200 #Duração
	li $a3,100 #Volume
	syscall
.end_macro 

.macro negado
	li $v0,31
	li $a0,52 	#Tom
	li $a1,200 	#Duração
	li $a3,100 	#Volume
	syscall

	li $v0,31
	li $a0,45 	#Tom
	li $a1,200 	#Duração
	li $a3,100 	#Volume
	syscall

	li $v0,31
	li $a0,52 	#Tom
	li $a1,200	#Duração
	li $a3,100 	#Volume
	syscall

	li $v0,31
	li $a0,45 	#Tom
	li $a1,200	#Duração
	li $a3,100 	#Volume
	syscall
.end_macro 

main:
	li $v0, 4 		#Chama a funçao para imprimir
	la $a0, f6		#Carrega a frase "Digite o bit da pulseira:"
	syscall			#Pede o bit da pulseira
	
	li $v0, 5 		#Pega do teclado o valor
	syscall			#Executa
	move $t0, $v0		#Recebe o bit da pulseira
	
	li $t9, 0		#Armazena 1 em t9
	beq $t0, $t9, Valor	#Verifica se o bit é igual a valor em t9
	j Negada		#Se não for nega a compra

Valor:		

	li $v0, 4 		#Chama a funçao para imprimir
	la $a0, f3		#Carrega a frase "Digite o valor a ser pago:"
	syscall			#Executa e imprime a frase
	
	li $v0, 6 		#Pega o valor digitado pelo usuário
	syscall			#Executa		
	
	lwc1 $f4, mil		#Salva 1000 em f4
	c.lt.s $f0,$f4 		#Verfica se o valor de f0 é menor do que o mil
	bc1t Pagamento		#Se for ele vai para "Pagamento"
	bc1f NegadoValor	#Se não for ele vai para "Negado Valor"
	
	
Pagamento:	

	li $v0, 4 		#Chama a função de imprimir
	la $a0, f5		#Carrega a frase "Digite o numero do cartão:"
	syscall			#Executa e imprime a frase
	
	li $v0, 8   		# Pega a entrada
        la $a0, cartao  	
        li $a1, 17		# Limita a entrada até 16 bits
        move $t5, $a0   	# Salva a string digitada em $t5
        syscall
        
        li $v0, 4 		#Chama a função de imprimir
	la $a0, f4		#Carrega a frase "Digite a senha do cartão:"
	syscall			#Executa e imprime a frase
	
	li $v0, 5 		#Pega valor digitado pelo usuario
	syscall			#Executa
	move $t3, $v0		#Recebe a senha do cartão em t3
	
	li $t9, 1000		#Armazena 1 em t9
	bge  $t3, $t9, Confirmada	#Verifica se o bit é igual a valor em t9
	j Senha			#Se a senha comecar com 0 ou for menor que 1000, pede novamente a senha

Senha:
	
	li $v0, 4 		#Chama a função de imprimir
	la $a0, f9		#Carrega a frase "Lembre se sua senha não pode comecar com zero\n" e "Senha incorreta, digite novamente sua senha:"
	syscall			#Executa e imprime a frase
	
	li $v0, 4 		#Chama a função de imprimir
	la $a0, f4		#Carrega a frase "Digite a senha do cartão:"
	syscall			#Executa e imprime a frase
	
	li $v0, 5 		#Pega valor digitado pelo usuario
	syscall			#Executa
	move $t3, $v0		#Recebe a senha do cartão em t3
	
	li $t9, 1000		#Armazena 1 em t9
	bge  $t3, $t9, Confirmada	#Verifica se o bit é igual a valor em t9
	j Senha	
				
Confirmada:

	beep			#Executa o código sonoro de compra com sucesso

	li $v0, 4 		#Chama a função de imprimir
	la $a0, f7		#Carrega a frase "O valor pago foi:"
	syscall			#Executa e imprime a frase
	
	lwc1 $f1,zero		#Carrega em f1 o valor especificado em zero
	
	li $v0, 2		#Chama a função de imprimir inteiros
	add.s $f12,$f0, $f1	#Carrega o valor da compra
	syscall			#Executa e imprime o valor pago
	
	li $v0, 4 		#Chama a função de imprimir
	la $a0, f8		#Carrega a frase "O numero do cartão é:"
	syscall			#Executa e imprime a frase
	
	la $a0, cartao 		#Carrega o que está salvo no cartao
	li $v0, 4  		
        syscall			#Executa e imprime a string   
	
	li $v0, 4 		#Chama a função de imprimir
	la $a0, f2		#Imprime a frase "Compra efetuada com sucesso"
	syscall			#Executa e imprime a frase
	
	li $v0, 10		# Código para encerrar o programa
	syscall			# Executa a chamada do SO para encerrar

Negada:

	negado			#Executa o código sonoro de compra negada
	
	li $v0, 4 		#Chama a função de imprimir
	la $a0, f0		#Imprime a frase 0
	syscall	
	
	li $v0, 10		# Código para encerrar o programa
	syscall			# Executa a chamada do SO para encerrar
			
NegadoValor:

	negado			#Executa o código sonoro de compra negada
	
	li $v0, 4 		#Chama a função de imprimir
	la $a0, f1		#Imprime a frase 1
	syscall	
	
	li $v0, 10		# Código para encerrar o programa
	syscall			# Executa a chamada do SO para encerrar
